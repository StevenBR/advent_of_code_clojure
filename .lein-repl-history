(seq? (seq []))
(seq? (seq [{}]))
(seq [])
(vector? [])
(:require [day1-b :as d1])
(:require [(day1-b :as d1])
(load-file "src/day1_b.clj")
(day1 directions)
directions
(day1 directions)
(update-visited)
(load-file "src/day1_b.clj")
(day1 directions)
(load "day1_b")
(load "src/day1_b")
(load "src/day1-b")
(load "day1-b")
(load "src/day1_b.clj")
(load-file "src/day1_b.clj")
(def visited-y {:facing \N :x 0 :y 3 :visited [{:x 0 :y 0} {:x 0 :y 1} {:x 0 :y 2} {:x 0 :y 3}]})
(def visited-x {:facing \E :x 3 :y 0 :visited [{:x 0 :y 0} {:x 1 :y 0} {:x 2 :y 0} {:x 3 :y 0}]})
(day1-b/update-visited {:facing \E :x 3 :y 0 :visited [{:x 0 :y 0}]} 3)
(update-visited {:facing \E :x 3 :y 0 :visited [{:x 0 :y 0}]} 3)
(= visited-x (update-visited {:facing \E :x 3 :y 0 :visited [{:x 0 :y 0}]} 3))
(load-file "src/day1_b.clj" :reload)
(:require "src/day1_b.clj")
(:require "src/day1_b.clj" :verbose)
(:require 'src/day1_b.clj :verbose)
(:require 'day1-b :verbose)
(load "day1_b")
(in-ns 'day1-b)
(day1 directions)
(def directions "R3, L5, R2, L2, R1, L3, R1, R3, L4, R3, L1, L1, R1, L3, R2, L3, L2, R1, R1, L1, R4, L1, L4, R3, L2, L2, R1, L1, R5, R4, R2, L5, L2, R5, R5, L2, R3, R1, R1, L3, R1, L4, L4, L190, L5, L2, R4, L5, R4, R5, L4, R1, R2, L5, R50, L2, R1, R73, R1, L2, R191, R2, L4, R1, L5, L5, R5, L3, L5, L4, R4, R5, L4, R4, R4, R5, L2, L5, R3, L4, L4, L5, R2, R2, R2, R4, L3, R4, R5, L3, R5, L2, R3, L1, R2, R2, L3, L1, R5, L3, L5, R2, R4, R1, L1, L5, R3, R2, L3, L4, L5, L1, R3, L5, L2, R2, L3, L4, L1, R1, R4, R2, R2, R4, R2, R2, L3, L3, L4, R4, L4, L4, R1, L4, L4, R1, L2, R5, R2, R3, R3, L2, L5, R3, L3, R5, L2, R3, R2, L4, L3, L1, R2, L2, L3, L5, R3, L1, L3, L4, L3")
(day1 directions)
exit
(load-file "src/day1-b.clj")
(load-file "src/day1_b.clj")
(def directions "R3, L5, R2, L2, R1, L3, R1, R3, L4, R3, L1, L1, R1, L3, R2, L3, L2, R1, R1, L1, R4, L1, L4, R3, L2, L2, R1, L1, R5, R4, R2, L5, L2, R5, R5, L2, R3, R1, R1, L3, R1, L4, L4, L190, L5, L2, R4, L5, R4, R5, L4, R1, R2, L5, R50, L2, R1, R73, R1, L2, R191, R2, L4, R1, L5, L5, R5, L3, L5, L4, R4, R5, L4, R4, R4, R5, L2, L5, R3, L4, L4, L5, R2, R2, R2, R4, L3, R4, R5, L3, R5, L2, R3, L1, R2, R2, L3, L1, R5, L3, L5, R2, R4, R1, L1, L5, R3, R2, L3, L4, L5, L1, R3, L5, L2, R2, L3, L4, L1, R1, R4, R2, R2, R4, R2, R2, L3, L3, L4, R4, L4, L4, R1, L4, L4, R1, L2, R5, R2, R3, R3, L2, L5, R3, L3, R5, L2, R3, R2, L4, L3, L1, R2, L2, L3, L5, R3, L1, L3, L4, L3")
(day1 directions)
(day1-b/day1 directions)
(def test-directions-final {:facing \S :x 3 :y 0 :visited [{:x 0 :y 0} {:x 1 :y 0} {:x 2 :y 0} {:x 3 :y 0}{:x 4 :y 0}{:x 5 :y 0}{:x 5 :y 1}{:x 5 :y 2}{:x 4 :y 2}{:x 3 :y 2}]})
(def directions-test "R5 L2 L2 L3")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
direction-test
(direction-test)
(directions-test)
directions-test
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
directions-test
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
directions-test
(def directions-test "R5, L2, L2, L3")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(load-file "src/day1_b.clj")
(day1-b/day1 directions-test)
(day1-b/day1 directions)
(load-file "src/day1_b.clj")
(day1-b/day1 directions)
(load-file "src/day1_b.clj")
(day1-b/day1 directions)
(+ (-5))
(+ -5)
(clojure.set/intersection #{ {:x 1 :y 2} {:x 3 :y 4}} #{ {:x 2 :y 3} {:x 4 :y 5}})
(clojure.set/intersection #{ {:x 1 :y 2} {:x 3 :y 4}} #{ {:x 2 :y 3} {:x 1 :y 2}})
(clojure.set/intersection #{ {:x 1 :y 2} {:x 3 :y 4}} {:x 1 :y 2})
(clojure.set/intersection #{ {:x 1 :y 2} {:x 3 :y 4}} #{:x 1 :y 2})
(clojure.set/intersection #{ {:x 1 :y 2} {:x 3 :y 4}} {:x 1 :y 2})
(clojure.set/intersection #{:x 1 :y 2} {:x 1 :y 2})
(clojure.set/intersection #{:x 1 :y 2} #{:x 1 :y 2})
(load-file "src/day1_b.clj")
(day1-b/day1 directions)
(reduced {1})
(println (reduced {1}))
(println reduced {1})
(load-file "src/day2/part1.clj")
(gimmie-the-digits 3)
(day2.part1/gimmie-the-digits 3)
(def keypad [[1 2 3] [4 5 6] [7 8 9]])
(clojure.string/split "R5, L5, R5, R3" #",\s+")
(defn check [[a b]] (str b a))
check "AB"
(defn check [[a b]] (str "Hello" b "Doll"  a))
check "AB"
(check "AB")
(str [\A \B])
(apply str [\A \B])
(println aczupnetwp-dnlgpyrpc-sfye-dstaatyr-561[patyc] jsehsyafy-vqw-ljsafafy-866[nymla])
(println "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-561[patyc] jsehsyafy-vqw-ljsafafy-866[nymla]")
(clojure.string/split-lines "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-561[patyc] jsehsyafy-vqw-ljsafafy-866[nymla]")
(clojure.string/split "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-561[patyc] jsehsyafy-vqw-ljsafafy-866[nymla]" #"\s+")
(:require [clojure.string :refer [split])
(:require [clojure.string :refer [split]])
(clojure.string/split "steven[1234]" #"[")
(clojure.string/split "steven[1234]" #"\[")
(clojure.string/split "steven[1234]" #"+\[")
(clojure.string/split "steven[1234]" #"\[")
(clojure.string/split "steven[1234]" #"\[|]")
(load-file "src/day4/day.clj")
(load-file "src/day4/day4.clj")
(get-ids-sum (-> "test/day4_input.txt" slurp (split #"\s+")))
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (split #"\s+")))
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(vector "abc" "123")
(load-file "src/day4/day4.clj")
(trace)
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
exit
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(remove #(= "-" %) "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-")
(remove #(= \- %) "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(remove #(= \- %) "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(remove #(= \- %) "aczupnetwp-dnlgpyrpc-sfye-dstaatyr-")
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(remove #(= \- %) [aczupnetwp-dnlgpyrpc-sfye-dstaatyr-])
(remove #(= \- %) ["aczupnetwp-dnlgpyrpc-sfye-dstaatyr-"])
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(frequencies "steven")
(frequencies ["steven" )
(frequencies ["steven" "rodriguez"])
(frequencies (get [["steven"] "rodriguez"] 0))
(frequencies (get (get [["steven"] "rodriguez"] 0) 0))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(count "steven")
(count 123456)
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(count 123456)
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-ids-sum (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
((juxt inc dec) 5)
(load-file "src/day4/day4.clj")
((juxt inc dec) 5)
(load-file "src/day4/day4.clj")
(day4.day4/get-sum-id (-> "test/day4_input.txt" slurp (clojure.string/split #"\s+")))
(re-find #"\d+" "abd123efg")
(let [pattern (re-pattern (str #"-" "(?!.*" #"-" ")"))] (split "abc- pattern 2))
)
(let [pattern (re-pattern (str #"-" "(?!.*" #"-" ")"))] (split "abc- pattern 2))
)
(let [pattern (re-pattern (str #"-" "(?!.*" #"-" ")"))] (split "abc-efg-123" pattern 2))
(let [pattern (re-pattern (str #"-" "(?!.*" #"-" ")"))] (clojure.string/split "abc-efg-123" pattern 2))
(let [pattern (re-pattern (str #"-" "(?!.*" #"-" ")"))] (clojure.string/split "abc-efg-meme-yo-123" pattern 2))
(clojure.string/split #"\[|]" "aaaaa-bbb-z-y-x-123[abxyz]")
(clojure.string/split #"\[|\]" "aaaaa-bbb-z-y-x-123[abxyz]")
(clojure.string/split #"[|]" "aaaaa-bbb-z-y-x-123[abxyz]")
(clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|]")
(clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"[|]")
(clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|]")
(clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|\]")
(clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|\]|-")
(last (clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|\]|-"))
(last (last (clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|\]|-")))
(peek (clojure.string/split "aaaaa-bbb-z-y-x-123[abxyz]" #"\[|\]|-"))
(load-file "src/day4/day4.clj")
(day4.day4/parse-line aaaaa-bbb-z-y-x-123[abxyz])
(day4.day4/parse-line "aaaaa-bbb-z-y-x-123[abxyz]")
(load-file "src/day4/day4.clj")
(day4.day4/parse-line "aaaaa-bbb-z-y-x-123[abxyz]")
(load-file "src/day4/day4.clj")
(day4.day4/parse-line "aaaaa-bbb-z-y-x-123[abxyz]")
(frequencies "steven")
(frequencies ["aaaaa" "bbb" "z" "y" "x" "123" "abxyz"])
(load-file "src/day4/day4.clj")
(day4.day4/parse-line "aaaaa-bbb-z-y-x-123[abxyz]")
